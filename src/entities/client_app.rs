//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "client_app")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    #[sea_orm(unique)]
    pub client_id: String,
    pub name: Option<String>,
    pub website: Option<String>,
    pub encoded_client: Json,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::client_authorization::Entity")]
    ClientAuthorization,
}

impl Related<super::client_authorization::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ClientAuthorization.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
